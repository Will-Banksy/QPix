/*
 * This is a Qt style sheet. This style sheet will be the default style for my application
 *
 * Animations workaround?: https://stackoverflow.com/questions/40287398/pyqt5-stylesheet-animation
 */

/* Use this to declare variables - except Qt doesn't support variables */
/* Instead, specify them in the colours.json file */
/*:root {
	--back-dark: #1C1C1C;
	--back-light: #282828;

	--button-normal: #333333;
	--button-hover: #444444;

	--accent: #4495D4;

	--text: #E8E8E8;
}*/

* {
	background-color: @back-dark;
	color: @text;
	border: none;
	outline: none;
	margin: 0;
	padding: 0;
/* 	border-radius: 2px; */
}

QPushButton {
	border: none;
	background: none;
	background-color: @button-normal;
	color: black;
	border-radius: 2px;
}

QPushButton:pressed {
	border: none;
	background-color: @button-hover;
}

QPushButton:hover {
	border: none;
	background-color: @button-hover;
}

QPushButton:checked {
	border: 2px solid @accent;
	background-color: @button-normal;
}

QPushButton:checked:hover {
	border: 2px solid @accent;
	background-color: @button-hover;
}

QGraphicsView {
	border: 1px solid @button-hover;
	border-radius: 2px;
}

QDockWidget {
	titlebar-close-icon: url(:close.png);
	titlebar-normal-icon: url(:/float.png), url(:/float-hover.png) active;
}

QDockWidget::close-button,
QDockWidget::float-button {
	background: none;
	border: none;
}

QDockWidget::close-button {
/* 	image: url(:/close-hover.png); */
}

QDockWidget::close-button:hover {
/* 	subcontrol-margin-right: 6px; */
/* 	image: url(:/close-hover.png); */
}

QDockWidget::title {
	color: @text;
	border: 1px solid @button-hover;
	border-bottom: none;
	padding: 3px 6px 3px 6px;
	border-top-left-radius: 2px;
	border-top-right-radius: 2px;
}

.DockContent { /* The dot followed by a name targets all widgets that have that name as their class property */
	border: 1px solid @button-hover;
	border-top: none;
	border-bottom-left-radius: 2px;
	border-bottom-right-radius: 2px;
}

/*QMainWindow::separator {
	background: @accent;
}*/